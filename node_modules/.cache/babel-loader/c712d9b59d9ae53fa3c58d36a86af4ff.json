{"ast":null,"code":"var _jsxFileName = \"/Users/patrykkeska/Documents/GitHub/weather-forecast/src/component/Result.js\";\nimport React from 'react';\nimport '../component/Result.css'; // import icon from './icons'\n\nvar Result = function Result(props) {\n  var _props$weather = props.weather,\n      value = _props$weather.value,\n      date = _props$weather.date,\n      city = _props$weather.city,\n      sunrise = _props$weather.sunrise,\n      sunset = _props$weather.sunset,\n      temperature = _props$weather.temperature,\n      pressure = _props$weather.pressure,\n      wind = _props$weather.wind,\n      icon = _props$weather.icon,\n      description = _props$weather.description,\n      error = _props$weather.error;\n  var content = null;\n  var weatherIcon = \"http://openweathermap.org/img/w/\".concat(icon, \".png\");\n\n  if (city && !error) {\n    var sunRise = new Date(sunrise * 1000).toLocaleTimeString();\n    var sunSet = new Date(sunset * 1000).toLocaleTimeString();\n    content = React.createElement(\"div\", {\n      className: \"weatherResult\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \"Search results for : \", React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, city), \"  on \", date, \" \"), React.createElement(\"img\", {\n      src: weatherIcon,\n      alt: \"weather Icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, description), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"em\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"Temperature \"), \": \", temperature, \" \\xB0C\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"em\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"Pressure \"), \"  : \", pressure, \" hPa\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"em\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"Wind\"), \" : \", wind, \" m/s\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"em\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"Sunrise \"), \" : \", sunRise), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"em\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \" Sunset \"), \" : \", sunSet));\n  }\n\n  return React.createElement(React.Fragment, null, error ? \"lack \".concat(city, \" in the datebase \") : content);\n};\n\nexport default Result;","map":{"version":3,"sources":["/Users/patrykkeska/Documents/GitHub/weather-forecast/src/component/Result.js"],"names":["React","Result","props","weather","value","date","city","sunrise","sunset","temperature","pressure","wind","icon","description","error","content","weatherIcon","sunRise","Date","toLocaleTimeString","sunSet"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,yBAAP,C,CACA;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,KAAD,EAAW;AAAA,uBAWNA,KAAK,CAACC,OAXA;AAAA,MAEdC,KAFc,kBAEdA,KAFc;AAAA,MAEPC,IAFO,kBAEPA,IAFO;AAAA,MAGhBC,IAHgB,kBAGhBA,IAHgB;AAAA,MAIhBC,OAJgB,kBAIhBA,OAJgB;AAAA,MAKhBC,MALgB,kBAKhBA,MALgB;AAAA,MAMhBC,WANgB,kBAMhBA,WANgB;AAAA,MAOhBC,QAPgB,kBAOhBA,QAPgB;AAAA,MAQhBC,IARgB,kBAQhBA,IARgB;AAAA,MAShBC,IATgB,kBAShBA,IATgB;AAAA,MAUhBC,WAVgB,kBAUhBA,WAVgB;AAAA,MAWhBC,KAXgB,kBAWhBA,KAXgB;AAatB,MAAIC,OAAO,GAAG,IAAd;AAEA,MAAIC,WAAW,6CAAsCJ,IAAtC,SAAf;;AAIA,MAAIN,IAAI,IAAI,CAACQ,KAAb,EAAoB;AAChB,QAAMG,OAAO,GAAG,IAAIC,IAAJ,CAASX,OAAO,GAAG,IAAnB,EAAyBY,kBAAzB,EAAhB;AACA,QAAMC,MAAM,GAAG,IAAIF,IAAJ,CAASV,MAAM,GAAG,IAAlB,EAAwBW,kBAAxB,EAAf;AACAJ,IAAAA,OAAO,GACH;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAST,IAAT,CAAxB,WAAqDD,IAArD,MADJ,EAEI;AAAK,MAAA,GAAG,EAAEW,WAAV;AAAuB,MAAA,GAAG,EAAC,cAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIH,WAAJ,CAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAH,QAA2BJ,WAA3B,WAJJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAH,UAA0BC,QAA1B,SALJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAH,SAAoBC,IAApB,SANJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAH,SAAwBM,OAAxB,CAPJ,EAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAH,SAAwBG,MAAxB,CARJ,CADJ;AAaH;;AAED,SACI,0CACKN,KAAK,kBAAWR,IAAX,yBAAqCS,OAD/C,CADJ;AAQH,CA7CD;;AAgDA,eAAed,MAAf","sourcesContent":["import React from 'react'\nimport '../component/Result.css'\n// import icon from './icons'\n\nconst Result = (props) => {\n\n    const { value, date\n        , city\n        , sunrise\n        , sunset\n        , temperature\n        , pressure\n        , wind\n        , icon\n        , description\n        , error } = props.weather;\n\n    let content = null;\n\n    let weatherIcon = `http://openweathermap.org/img/w/${icon}.png`;\n\n\n\n    if (city && !error) {\n        const sunRise = new Date(sunrise * 1000).toLocaleTimeString();\n        const sunSet = new Date(sunset * 1000).toLocaleTimeString();\n        content = (\n            <div className=\"weatherResult\">\n                <p>Search results for : <strong>{city}</strong>  on {date} </p>\n                <img src={weatherIcon} alt=\"weather Icon\" />\n                <p>{description}</p>\n                <p><em>Temperature </em>: {temperature} Â°C</p>\n                <p><em>Pressure </em>  : {pressure} hPa</p>\n                <p><em>Wind</em> : {wind} m/s</p>\n                <p><em>Sunrise </em> : {sunRise}</p>\n                <p><em> Sunset </em> : {sunSet}</p>\n            </div>\n        )\n\n    }\n\n    return (\n        <>\n            {error ? `lack ${city} in the datebase ` : content\n            }\n\n        </ >\n    )\n\n}\n\n\nexport default Result"]},"metadata":{},"sourceType":"module"}